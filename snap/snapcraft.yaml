name: ubuntu-kr-qr-kiosk
version: 0.2.0
summary: Kiosk app for Ubuntu KR event QR Check in
description: Kiosk app for Ubuntu KR event QR Check in
compression: lzo

confinement: strict
base: core24
grade: stable

apps:
  ubuntu-kr-qr-kiosk:
    command-chain: &_command-chain
    - bin/gpu-2404-wrapper
    - bin/wayland-launch
    command: &_command bin/ubuntu_kr_qr_kiosk
    # extensions: [flutter-master] # Where "master" defines which Flutter channel to use for the build
    # extensions: [gnome] 
    plugs: &_plugs
    - opengl
    - wayland
    - network
    - raw-usb
    - home
    - process-control
    - system-observe
    - hardware-observe
    - network-bind
    - network-manager
    - network-observe
    # slots:
    #   - dbus-ubuntu-kr-qr-kiosk
    environment: &_environment
      XDG_DATA_HOME: $SNAP_USER_DATA
      XDG_DATA_DIRS: $SNAP/usr/share
      GDK_GL: gles
  daemon:
    daemon: simple
    restart-delay: 3s
    restart-condition: always
    command-chain: *_command-chain
    command: *_command
    plugs: *_plugs
    environment: *_environment
  printserver:
    command: bin/printserver-launch
    daemon: simple
    restart-delay: 5s
    restart-condition: always
    plugs: *_plugs
    environment: *_environment
    

plugs:
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404

environment:
  # Other, generally useful environment settings...
  # LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_DATA_DIRS:   $SNAP/usr/local/share:$SNAP/usr/share
  # XKB config
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
  # Font
  FONTCONFIG_PATH: ${SNAP}/etc/fonts/conf.d
  FONTCONFIG_FILE: ${SNAP}/etc/fonts/fonts.conf
  # Enforce locale
  LC_ALL: ko_KR.UTF-8
  LIBUSB_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libusb-1.0.so


layout:
  /usr/share/libdrm:
    bind: $SNAP/gpu-2404/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/gpu-2404/drirc.d
  # Other, generally useful paths
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/icons:
    bind: $SNAP/usr/share/icons
  /usr/share/sounds:
    bind: $SNAP/usr/share/sounds
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/local/share/fonts: 
    bind: $SNAP/usr/share/fonts
  # GTK
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gdk-pixbuf-2.0:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gdk-pixbuf-2.0
  /usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gtk-3.0:
    bind: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gtk-3.0
  /usr/share/mime:
    bind: $SNAP/usr/share/mime
  /etc/gtk-3.0:
    bind: $SNAP/etc/gtk-3.0
# slots:
  # dbus-ubuntu-kr-qr-kiosk: # adjust accordingly to your app name
  #   interface: dbus
  #   bus: session
  #   name: org.ubuntu-kr.kiosk # adjust accordingly to your app name and
  
parts:
  # gsettings, pixbuf and immodules are not needed by all snaps,
  # but they are so common a requirement include them here
  gsettings+pixbuf+immodules:
    plugin: nil
    build-packages:
      - libgdk-pixbuf2.0-0
      - librsvg2-common
      - shared-mime-info
      - libgtk-3-0t64
      - fonts-noto-cjk
    override-build: |
      craftctl default
      # Update mime database
      update-mime-database ${CRAFT_PART_INSTALL}/usr/share/mime
      # build immodules cache
      mkdir -p ${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gtk-3.0/3.0.0/
      /usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libgtk-3-0t64/gtk-query-immodules-3.0 > ${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gtk-3.0/3.0.0/immodules.cache
    stage-packages:
      - librsvg2-common
      - gsettings-desktop-schemas
      - libglib2.0-bin
      - fonts-noto-cjk
      - xkb-data
    override-prime: |
      craftctl default
      # Compile the gsettings schemas
      /usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/glib-2.0/glib-compile-schemas "$CRAFT_PRIME/usr/share/glib-2.0/schemas"
      # Index the pixbuf loaders
      LOADERS_PATH=$(echo ${CRAFT_PRIME}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gdk-pixbuf-2.0/*/loaders)
      QUERY_LOADERS=/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders
      GDK_PIXBUF_MODULEDIR=${LOADERS_PATH} ${QUERY_LOADERS} > ${LOADERS_PATH}/../loaders.cache
      sed s!$CRAFT_PRIME!!g --in-place ${LOADERS_PATH}/../loaders.cache

  # Some utility scripts for setting up the Wayland environment
  setup:
    plugin: dump
    source: snap-launch
    override-build: |
      # The plugs needed to run Wayland. (wayland-launch checks them, setup.sh connects them)
      # You may add further plugs here if you want these options
      PLUGS="opengl wayland gpu-2404 home raw-usb process-control system-observe hardware-observe network-manager network-observe"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/setup.sh
      craftctl default
    stage-packages:
      - inotify-tools

  flutter-git:
    plugin: nil
    source: https://github.com/flutter/flutter.git
    source-type: git
    source-tag: 3.32.7
    override-prime: |
      craftctl default
      rm $CRAFT_PART_INSTALL/usr/bin/flutter
      rm -rf $CRAFT_PRIME/usr/libexec/flutter
    override-build: |
      craftctl default
      mkdir -p $CRAFT_PART_INSTALL/usr/bin
      mkdir -p $CRAFT_PART_INSTALL/usr/libexec
      cp -r $CRAFT_PART_SRC $CRAFT_PART_INSTALL/usr/libexec/flutter
      ln -s $CRAFT_PART_INSTALL/usr/libexec/flutter/bin/flutter $CRAFT_PART_INSTALL/usr/bin/flutter
      $CRAFT_PART_INSTALL/usr/bin/flutter doctor
      $CRAFT_PART_INSTALL/usr/bin/flutter precache --linux --universal
    build-packages:
      - curl
      - git
      - unzip
      - xz-utils
      - zip
      - libglu1-mesa
      - clang
      - cmake
      - ninja-build
      - pkg-config
      - libgtk-3-dev
      - liblzma-dev
      - libstdc++-12-dev

  ubuntu-kr-qr-kiosk:
    after:
      - flutter-git
    source: .
    source-type: git
    plugin: nil
    build-packages:
      - libnss3
      - git
      - make
    stage-packages:
      - libgtk-3-0
      - libgl1
      - locales-all
      # - libdrm-common
    override-build: |
      craftctl default
      set -eux
      mkdir -p $CRAFT_PART_INSTALL/bin/lib
      flutter config --enable-linux-desktop
      flutter doctor
      flutter pub get
      flutter build linux --release -v
      cp -r build/linux/*/release/bundle/* $CRAFT_PART_INSTALL/bin/

  printserver:
    plugin: python
    source: ./printserver
    python-packages:
      - blinker==1.6.2
      - click==8.1.7
      - Flask==2.3.2
      - gunicorn==21.2.0
      - itsdangerous==2.1.2
      - Jinja2==3.1.2
      - MarkupSafe==2.1.3
      - packaging==23.1
      - Werkzeug==2.3.7
      - Pillow==10.3.0
      - pyusb==1.2.1
      - numpy==2.0.0
    build-packages:
      - build-essential
      - libusb-1.0-0-dev
    stage-packages:
      - libusb-1.0-0
      - libusb-1.0-0-dev
    override-build: |
      craftctl default
      set -eux
      mkdir -p $CRAFT_PART_INSTALL/bin/printserver
      cp -r ./* $CRAFT_PART_INSTALL/bin/printserver

  gpu-2404:
    after:
      - gsettings+pixbuf+immodules
      - setup
      - ubuntu-kr-qr-kiosk
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404 nvidia-2404

    prime:
      - bin/gpu-2404-wrapper

platforms:
  amd64:
  arm64:
